stages:
  - install
  - build

before_script:
  - export SERVER_NAMESPACE=github.com/servicelab
  - mkdir -p /go/src/$SERVER_NAMESPACE
  - export GOPATH=/go
  - ln -s $CI_PROJECT_DIR /go/src/$SERVER_NAMESPACE/$CI_PROJECT_NAME
  - cd /go/src/$SERVER_NAMESPACE/$CI_PROJECT_NAME
  - export GOBIN=$GOPATH/bin
  - export PATH=$PATH:$GOPATH/bin

install:
  stage: install
  image: golang:1.9
  script:
    - curl https://glide.sh/get | sh
    - glide update
  artifacts:
    paths:
      - vendor
    expire_in: 10 mins
  cache:
    key: go-cache
    paths:
      - .godeps
  tags:
    - docker

macos:
  stage: build
  image: golang:1.9
  script:
    - ./dist.sh darwin amd64
  artifacts:
    name: "tamtam-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

linux-amd64:
  stage: build
  image: golang:1.9
  script:
    - ./dist.sh linux amd64
  artifacts:
    name: "tamtam-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

linux-i386:
  stage: build
  image: golang:1.9
  script:
    - ./dist.sh linux 386
  artifacts:
    name: "tamtam-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

linux-arm:
  stage: build
  image: golang:1.9
  script:
    - ./dist.sh linux arm
  artifacts:
    name: "tamtam-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

windows:
  stage: build
  image: golang:1.9
  script:
    - ./dist.sh windows amd64
  artifacts:
    name: "tamtam-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam.exe

