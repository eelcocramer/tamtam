stages:
  - build
  - package

build:
  stage: build
  image: golang:1.10
  script:
    - export SERVER_NAMESPACE=github.com/servicelab
    - mkdir -p /go/src/$SERVER_NAMESPACE
    - export GOPATH=/go
    - ln -s $CI_PROJECT_DIR /go/src/$SERVER_NAMESPACE/$CI_PROJECT_NAME
    - cd /go/src/$SERVER_NAMESPACE/$CI_PROJECT_NAME
    - export GOBIN=$GOPATH/bin
    - export PATH=$PATH:$GOPATH/bin
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    - make release -j 5
  artifacts:
    paths:
      - dist
    expire_in: 30 mins
  cache:
    key: go-cache
    paths:
      - vendor
  tags:
    - docker

macos:
  stage: package
  image: alpine:3.7
  script:
    - mv dist/tamtam-darwin-amd64 ./tamtam
  artifacts:
    name: "$CI_PROJECT_NAME-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

linux-amd64:
  stage: package
  image: alpine:3.7
  script:
    - mv dist/tamtam-linux-amd64 ./tamtam
  artifacts:
    name: "$CI_PROJECT_NAME-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

linux-386:
  stage: package
  image: alpine:3.7
  script:
    - mv dist/tamtam-linux-386 ./tamtam
  artifacts:
    name: "$CI_PROJECT_NAME-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

linux-arm:
  stage: package
  image: alpine:3.7
  script:
    - mv dist/tamtam-linux-arm ./tamtam
  artifacts:
    name: "$CI_PROJECT_NAME-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam

windows:
  stage: package
  image: alpine:3.7
  script:
    - mv dist/tamtam-windows-amd64 ./tamtam.exe
  artifacts:
    name: "$CI_PROJECT_NAME-v1.0.0-SNAPSHOT-$CI_JOB_NAME"
    paths:
      - tamtam.exe

